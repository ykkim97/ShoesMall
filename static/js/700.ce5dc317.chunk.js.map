{"version":3,"file":"static/js/700.ce5dc317.chunk.js","mappings":"iOACA,GAAgB,UAAY,wBAAwB,gBAAkB,8BAA8B,mBAAqB,iCAAiC,SAAW,uBAAuB,UAAY,wBAAwB,MAAQ,qB,mBCyFxO,MA7EA,YAAsD,EAAvCA,KAAwC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YAGpC,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAmBC,EAAAA,GAAM,SAACC,GACtBb,EAAQa,SAKhB,IAAMC,EAAM,yCAAG,6GAEYC,EAAAA,EAAAA,IACfH,EAAAA,EACAR,EACAE,GALG,cAQPJ,GAAY,GARL,gDAaPc,QAAQC,IAAI,KAAMC,SAClBC,MAAM,4FAdC,yDAAH,qDAkBZ,OACI,iCAEQT,EAAAA,EAAAA,YAAU,WAENT,GAAYO,GAAU,OAK9B,iBAAKY,UAAWC,EAAAA,SAAhB,WAEI,iBAAKD,UAAWC,EAAAA,UAAhB,WACI,gDACA,kBACIC,KAAK,OACLC,KAAK,QACLC,YAAY,qBACZC,SAAU,SAACC,GAAOrB,EAAcqB,EAAEC,OAAOC,QACzCR,UAAWC,EAAAA,mBAEf,kBACIC,KAAK,WACLC,KAAK,WACLC,YAAY,2BACZC,SAAU,SAACC,GAAOnB,EAAiBmB,EAAEC,OAAOC,QAC5CR,UAAWC,EAAAA,sBAEf,mBAAQQ,QAASf,EAAQM,UAAWC,EAAAA,SAApC,iCACA,mBACA,mBAAQQ,QAAS,WAAOrB,EAAS,WAAYY,UAAWC,EAAAA,UAAxD,0CAEJ,eAAID,UAAWC,EAAAA,MAAf","sources":["webpack://pwa-shoes-mall/./src/routes/Auth.module.css?3f7a","routes/Auth.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"Auth_loginForm__ClcdD\",\"loginEmailInput\":\"Auth_loginEmailInput__JwZXx\",\"loginPasswordInput\":\"Auth_loginPasswordInput__zFiAW\",\"loginBtn\":\"Auth_loginBtn__RqslT\",\"signUpBtn\":\"Auth_signUpBtn__XUbcp\",\"title\":\"Auth_title__9Qe-+\"};","// 회원가입, 로그인 컴포넌트\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { \r\n    // createUserWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    signInWithEmailAndPassword,\r\n    // signOut,\r\n} from \"firebase/auth\";\r\nimport { auth } from \"../firebase\";\r\nimport styles from \"./Auth.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Auth({user, setUser, isLogged, setIsLogged}) {\r\n\r\n    // 로그인 email, pw\r\n    const [loginEmail, setLoginEmail] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (currentUser) => {\r\n            setUser(currentUser);\r\n        })\r\n    })\r\n\r\n    // 로그인 함수\r\n    const signin = async () => {\r\n        try {\r\n            const user = await signInWithEmailAndPassword(\r\n                auth,\r\n                loginEmail,\r\n                loginPassword\r\n            );\r\n            // 로그인 성공시 true로\r\n            setIsLogged(true);\r\n            \r\n            // sessionStorage.setItem(\"loginInfo\",JSON.stringify({userId : loginEmail, userPassword : loginPassword}));\r\n            \r\n        } catch (error) {\r\n            console.log(error.message);\r\n            alert(\"이메일 혹은 비밀번호가 틀립니다.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                useEffect(() => {\r\n                    // 로그인 성공시 이전페이지로 이동( navigate(-1)을 사용하면 이전페이지로 이동가능)\r\n                    isLogged && navigate(-1)\r\n                })\r\n            }\r\n\r\n            {/* 로그인 / 로그아웃 */}\r\n            <div className={styles.loginDiv}>\r\n                {/* 로그인 */}\r\n                <div className={styles.loginForm}>\r\n                    <h3>로그인</h3>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"email\" \r\n                        placeholder=\"이메일\"\r\n                        onChange={(e) => {setLoginEmail(e.target.value)}}\r\n                        className={styles.loginEmailInput}\r\n                    />\r\n                    <input \r\n                        type=\"password\" \r\n                        name=\"password\" \r\n                        placeholder=\"비밀번호\"\r\n                        onChange={(e) => {setLoginPassword(e.target.value)}}\r\n                        className={styles.loginPasswordInput}\r\n                    />\r\n                    <button onClick={signin} className={styles.loginBtn}>로그인</button>\r\n                    <hr />\r\n                    <button onClick={() => {navigate(`signup`)}} className={styles.signUpBtn}>회원가입</button>\r\n                </div>\r\n                <h5 className={styles.title}>카페슈 CafeShoe</h5>\r\n            </div>\r\n\r\n            {/* 현재 로그인된 사용자 이메일 출력 */}\r\n            {/* <div>User Logged In : {user?.email}</div> */}\r\n\r\n            {/* 로그아웃 */}\r\n            {/* <button onClick={signout}>로그아웃</button> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n"],"names":["user","setUser","isLogged","setIsLogged","useState","loginEmail","setLoginEmail","loginPassword","setLoginPassword","navigate","useNavigate","useEffect","onAuthStateChanged","auth","currentUser","signin","signInWithEmailAndPassword","console","log","message","alert","className","styles","type","name","placeholder","onChange","e","target","value","onClick"],"sourceRoot":""}
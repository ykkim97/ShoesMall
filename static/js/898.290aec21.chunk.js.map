{"version":3,"file":"static/js/898.290aec21.chunk.js","mappings":"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","sources":["webpack://pwa-shoes-mall/./src/routes/Detail.module.css?8ddc","webpack://pwa-shoes-mall/./src/components/DetailTab.module.css?a4df","components/DetailTab.js","webpack://pwa-shoes-mall/./src/components/ShipInfo.module.css?4942","components/ShipInfo.js","components/TabContent.js","webpack://pwa-shoes-mall/./src/components/AddBasketModal.module.css?f593","components/AddBasketModal.js","routes/Detail.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"detailInfoTitle\":\"Detail_detailInfoTitle__MgO+4\",\"detailInfo\":\"Detail_detailInfo__uEKeu\",\"detailPrice\":\"Detail_detailPrice__QlfZ3\",\"menu\":\"Detail_menu__hg6e1\",\"countDiv\":\"Detail_countDiv__lD-KV\",\"itemCount\":\"Detail_itemCount__i7BGz\",\"plusBtn\":\"Detail_plusBtn__fmW8W\",\"minusBtn\":\"Detail_minusBtn__IRHrU\",\"putIn\":\"Detail_putIn__Ar+Ff\",\"goBasket\":\"Detail_goBasket__Tw0Ts\",\"goPurchase\":\"Detail_goPurchase__StGln\",\"goBack\":\"Detail_goBack__Lm5pt\",\"salesAlert\":\"Detail_salesAlert__ZE7ek\"};","// extracted by mini-css-extract-plugin\nexport default {\"detailtab-div\":\"DetailTab_detailtab-div__NZfSp\",\"detailtab-title\":\"DetailTab_detailtab-title__l5CHo\",\"table-frame\":\"DetailTab_table-frame__TBp8W\",\"itemKey\":\"DetailTab_itemKey__CZuNf\"};","import React from \"react\";\r\nimport styles from \"./DetailTab.module.css\";\r\n\r\n// 상품 상세 탭\r\nfunction DetailTab() {\r\n    return (\r\n        <div className={styles[\"detailtab-div\"]}>\r\n            <h5 className={styles[\"detailtab-title\"]}>필수 표기 정보</h5>\r\n            <table className={styles[\"table-frame\"]}>\r\n                <colgroup>\r\n                    <col width=\"25%\" />\r\n                    <col width=\"25%\" />\r\n                    <col width=\"25%\" />\r\n                    <col width=\"25%\" />\r\n                </colgroup>\r\n\r\n                <tbody>\r\n                    <tr>\r\n                        <td className={styles.itemKey}>제품의 주 소재</td>\r\n                        <td>컨텐츠 참조</td>\r\n                        <td className={styles.itemKey}>제조국</td>\r\n                        <td>대한민국</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className={styles.itemKey}>치수</td>\r\n                        <td>230~260</td>\r\n                        <td className={styles.itemKey}>품질보증기준</td>\r\n                        <td>제품 이상 시 공정거래위원회 고시 소비자분쟁해결기준에 의거 보상합니다.</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className={styles.itemKey}>색상</td>\r\n                        <td>화이트/블랙</td>\r\n                        <td className={styles.itemKey}>취급시 주의사항</td>\r\n                        <td>화기주의</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className={styles.itemKey}>제조자(수입자)</td>\r\n                        <td>땡땡스니커즈(주)</td>\r\n                        <td className={styles.itemKey}>A/S 책임자와 전화번호</td>\r\n                        <td>010-****-****</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailTab;","// extracted by mini-css-extract-plugin\nexport default {\"shipInfo-title\":\"ShipInfo_shipInfo-title__F44GH\",\"exchange-title\":\"ShipInfo_exchange-title__XCTTR\",\"table-frame\":\"ShipInfo_table-frame__VtVot\",\"itemKey\":\"ShipInfo_itemKey__dkIqY\"};","import React from \"react\";\r\nimport styles from \"./ShipInfo.module.css\";\r\n\r\n//배송/교환/반품 안내 탭\r\nfunction ShipInfo() {\r\n    return (\r\n        <div className={styles[\"shipInfo-div\"]}>\r\n            <h5 className={styles[\"shipInfo-title\"]}>배송정보</h5>\r\n            <table className={styles[\"table-frame\"]}>\r\n                <colgroup>\r\n                    <col width=\"15%\" />\r\n                    <col width=\"35%\" />\r\n                    <col width=\"15%\" />\r\n                    <col width=\"35%\" />\r\n                </colgroup>\r\n\r\n                <tr>\r\n                    <td className={styles[\"itemKey\"]}>배송방법</td>\r\n                    <td>순차배송</td>\r\n                    <td rowSpan=\"2\" className={styles[\"itemKey\"]}>배송비</td>\r\n                    <td rowSpan=\"2\">\r\n                        무료배송<br />\r\n                        - 로켓배송 상품 중 19,800원 이상 구매 시 무료배송<br />\r\n                        - 도서산간 지역 추가비용 없음\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td className={styles[\"itemKey\"]}>묶음배송 여부</td>\r\n                    <td>가능</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className={styles[\"itemKey\"]}>배송기간</td>\r\n                    <td colSpan=\"3\">\r\n                        ㆍ배송 지역 : 주문 및 결제 완료 후, 1-2일 이내 도착<br />\r\n                        ㆍ이외 지역 : 주문 및 결제 완료 후, 2-3일 이내 도착<br />\r\n                        - 도서 산간 지역 등은 하루가 더 소요될 수 있습니다.\r\n                    </td>\r\n                    \r\n                </tr>\r\n            </table>\r\n            \r\n            <div className={styles[\"exchange-div\"]}>\r\n                <h5 className={styles[\"exchange-title\"]}>교환/반품 안내</h5>\r\n                <table className={styles[\"table-frame\"]}>\r\n                    <colgroup>\r\n                        <col width=\"20%\" />\r\n                        <col width=\"80%\" />\r\n                    </colgroup>\r\n                    <tr>\r\n                        <td className={styles[\"itemKey\"]}>교환/반품 비용</td>\r\n                        <td>0원\r\n                            - 단, 고객 변심의 경우에만 발생\r\n                            - 부분반품 시, 남은금액이 무료배송 조건을 유지하면 일부 반품비용이 부과\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className={styles[\"itemKey\"]}>교환/반품 신청 기준일</td>\r\n                        <td>ㆍ단순변심에 의한 상품의 교환/반품은 제품 수령 후 30일 이내까지, 교환/반품 제한사항에 해당하지 않는 경우에만 가능<br/> (교환/반품 비용 고객부담)<br/>\r\n                            ㆍ상품의 내용이 표시·광고의 내용과 다른 경우에는 상품을 수령한 날부터 3개월 이내, 그 사실을 안 날 또는 알 수 있었던 날부터<br/>\r\n                            30일 이내에 청약철회 가능\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShipInfo;","import React from \"react\";\r\nimport DetailTab from \"./DetailTab\";\r\nimport ShipInfo from \"./ShipInfo\";\r\n\r\n\r\n// 상품상세 , 상품평 , 배송안내 Part\r\nfunction TabContent({tabs}) {\r\n    if (tabs === 0) return <div><DetailTab /></div>\r\n    else if (tabs === 1) return <div><ShipInfo /></div>\r\n}\r\n\r\nexport default TabContent;  ","// extracted by mini-css-extract-plugin\nexport default {\"basket-modal\":\"AddBasketModal_basket-modal__VSbgZ\",\"bg\":\"AddBasketModal_bg__HJvxS\",\"modalBox\":\"AddBasketModal_modalBox__9ymtE\",\"btnGroup\":\"AddBasketModal_btnGroup__JSaW3\",\"closeBtn\":\"AddBasketModal_closeBtn__RFDu1\",\"goBasketBtn\":\"AddBasketModal_goBasketBtn__k2YMj\"};","import React, { useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./AddBasketModal.module.css\";\r\n\r\nconst AddBasketModal = ({onOpenModal}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const disableScroll = () => {\r\n        document.body.style.cssText = `\r\n        position: fixed; \r\n        top: -${window.scrollY}px;\r\n        overflow-y: scroll;\r\n        width: 100%;`;\r\n    }\r\n\r\n    const enableScroll = () => {\r\n        const scrollY = document.body.style.top;\r\n        document.body.style.cssText = '';\r\n        window.scrollTo(0, parseInt(scrollY || '0', 10) * -1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        disableScroll();\r\n        return () => enableScroll();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles[\"basket-modal\"]}>\r\n            \r\n            <div className={styles[\"modalBox\"]}>\r\n                <h3>장바구니에 상품이 담겼습니다!</h3>\r\n                <div className={styles[\"btnGroup\"]}>\r\n                    <Button className={styles[\"goBasketBtn\"]} onClick={() => navigate('/cart')}>장바구니로</Button>\r\n                    <Button className={styles[\"closeBtn\"]} onClick={onOpenModal}>확인</Button>\r\n                </div>\r\n            </div>\r\n            <div className={styles[\"bg\"]}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBasketModal;","// 상품 상세 정보 Page(상품별 정보)\r\n\r\nimport React,{useEffect, useState} from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport MainNavbar from \"../components/MainNavbar\";\r\nimport styles from \"./Detail.module.css\"\r\nimport { Nav } from \"react-bootstrap\";\r\nimport Footer from \"../components/Footer\";\r\nimport TabContent from \"../components/TabContent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDatabase, onValue, ref, update } from \"firebase/database\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport AddBasketModal from \"../components/AddBasketModal\";\r\n\r\nfunction Detail({popularShoes,setPopularShoes,isLogged,setIsLogged}) {\r\n    const [tabs, setTabs] = useState(0);\r\n    const [isAlert, setIsAlert] = useState(true);\r\n    const [itemCount, setItemCount] = useState(1);\r\n\r\n    // 장바구니 클릭 Modal Switch\r\n    const [addBasketModalOn, setAddBasketModalOn] = useState(false);\r\n\r\n    let { id } = useParams();\r\n    let findItem = popularShoes.find(item => item.id == id);\r\n\r\n    const basketState = useSelector(state => state.basketReducer);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    \r\n    const onOpenModal = () => {\r\n        setAddBasketModalOn(!addBasketModalOn)\r\n    }\r\n    \r\n    const addBasket = () => {\r\n        if (isLogged) {\r\n            const database = getDatabase();\r\n            const auth = getAuth();\r\n            const userId = auth.currentUser.uid;\r\n            \r\n\r\n            // 경로 => users/${userId}/cart\r\n            const cartRef = ref(database, `users/${userId}/cart`);\r\n\r\n            // 장바구니에 넣을 Object형식 - cartFormat\r\n            let cartFormat = {id : findItem.id, name : findItem.title, quan : itemCount, price : findItem.price};\r\n            // DB에서 가져온것을 저장할 변수 - cartArray\r\n            let cartArray;\r\n            onValue(cartRef, (snapshot) => {\r\n                cartArray = snapshot.val();\r\n            })\r\n            // cartArray가 비어있다면 []로 만들기\r\n            if (cartArray == null) {\r\n                cartArray = [];\r\n            }\r\n\r\n            // 장바구니에 동일한 상품이 있는지 확인하기 위한 addFound\r\n            // 동일한 상품이 있으면 수량을 1 증가하고 상품이 없으면 cartFormat을 넣기\r\n            let addFound = cartArray.findIndex((item) => item.id === cartFormat.id);\r\n            if (addFound >= 0) {\r\n                cartArray[addFound].quan = parseInt(cartArray[addFound].quan) + parseInt(itemCount); \r\n            } else {\r\n                cartArray.push(cartFormat);\r\n            }\r\n            // cartArray를 실제 DB에 업데이트 하기\r\n            update(ref(database, `users/` + userId), {\r\n                cart: cartArray,\r\n            })\r\n            \r\n        } else {\r\n            dispatch({type : \"항목추가\", payload : {id : findItem.id, name : findItem.title, quan : itemCount, price : findItem.price}});\r\n        }\r\n        onOpenModal();\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setItemCount(e.target.value);\r\n        console.log(itemCount)\r\n    }\r\n\r\n    const addItemCount = () => {\r\n        setItemCount(parseInt(itemCount)+1)\r\n    }\r\n\r\n    const minusItemCount = () => {\r\n        if (itemCount > 1) setItemCount(itemCount-1)\r\n    }\r\n    \r\n    // 최근 본 상품 ID값 넣기\r\n    useEffect(() => {\r\n        if(isLogged) {\r\n            const database = getDatabase();\r\n            const auth = getAuth();\r\n            const userId = auth.currentUser.uid;\r\n\r\n            const Ref = ref(database, `users/${userId}/history`);\r\n            let watchedArray;\r\n\r\n            onValue(Ref,(snapshot) => {\r\n                watchedArray = snapshot.val();\r\n            })\r\n\r\n            if (watchedArray == null) {\r\n                watchedArray = []; // localStorage가 비어있을 경우 빈 array로 만듬\r\n            }\r\n\r\n            watchedArray.unshift(findItem.id); // 가져온 기존 array에 상품 ID값을 푸시\r\n            watchedArray = new Set(watchedArray); // 상품 ID가 중복되는 것을 막기위해 Set으로 중복 제거\r\n            watchedArray = [...watchedArray]; // Set자료형에서 다시 Array로 변환\r\n\r\n            update(ref(database, `users/` + userId), {\r\n                history: watchedArray,\r\n            })\r\n        }\r\n        else {\r\n            let watchedArray = localStorage.getItem('watched');\r\n\r\n            if (watchedArray == null) {\r\n                watchedArray = []; // localStorage가 비어있을 경우 빈 array로 만듬\r\n            } else {\r\n                watchedArray = JSON.parse(watchedArray); // JSON자료를 Array로 변환해서 가져옴\r\n            }\r\n\r\n            watchedArray.unshift(findItem.id); // 가져온 기존 array에 상품 ID값을 푸시\r\n            watchedArray = new Set(watchedArray); // 상품 ID가 중복되는 것을 막기위해 Set으로 중복 제거\r\n            watchedArray = [...watchedArray]; // Set자료형에서 다시 Array로 변환\r\n\r\n            localStorage.setItem('watched', JSON.stringify(watchedArray)) // localStorage에 다시 JSON자료형으로 넣어줌 \r\n        }\r\n        \r\n    }, [])\r\n\r\n    // 품절 임박 메세지 타이머 실행\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => setIsAlert(false),3000);\r\n        return () => clearTimeout(timer);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <MainNavbar isLogged={isLogged} setIsLogged={setIsLogged}/>\r\n\r\n            <h1 className={styles.detailInfoTitle}>상품 정보</h1>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 detailInfo\">\r\n                        <img src={`https://firebasestorage.googleapis.com/v0/b/shoes-shoppingmall.appspot.com/o/items%2Fshoes${findItem.id}.jpg?alt=media`} width=\"100%\" />\r\n                    </div>\r\n                    <div className=\"col-md-12\" id={styles.detailInfo}>\r\n                        <h4 className=\"pt-5\">{findItem.title}</h4>\r\n                        <p>{findItem.content}</p>\r\n                        <p id={styles.detailPrice}>판매가 : {findItem.price}원</p>\r\n\r\n                        <div className={styles.menu}>\r\n\r\n                            {/* 수량 */}\r\n                            <div className={styles.countDiv}>\r\n                                <input type=\"text\" value={itemCount} onChange={onChange} id={styles.itemCount}></input>\r\n                                <button onClick={addItemCount} id={styles.plusBtn}>+</button>\r\n                                <button onClick={minusItemCount} id={styles.minusBtn}>-</button>\r\n                            </div>\r\n\r\n                            <button className=\"btn btn-primary\" id={styles.putIn}\r\n                                onClick={addBasket}\r\n                            >장바구니담기</button>\r\n\r\n                            {/* 장바구니담기 클릭 시 Modal창 띄우기 */}\r\n                            {\r\n                                addBasketModalOn ? <AddBasketModal onOpenModal={onOpenModal}/> : null\r\n                            }\r\n\r\n                            <button className=\"btn btn-primary\" id={styles.goBasket}\r\n                                onClick={() => navigate('/cart')}\r\n                            >장바구니로</button>\r\n                            <button className=\"btn btn-success\" id={styles.goPurchase}>바로구매</button> \r\n                            <button className=\"btn btn-danger\" id={styles.goBack} onClick={() => navigate(-1)}>뒤로가기</button> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    isAlert === true \r\n                    ? (\r\n                        (<div className={styles.salesAlert}>\r\n                            <p>🔴 품절임박 : 재고가 얼마남지 않았습니다. 🔴</p>\r\n                        </div>)\r\n                    ) : null\r\n                }\r\n\r\n                <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"/link-0\">\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"link-0\" onClick={() => {setTabs(0)}}>상품상세</Nav.Link>\r\n                    </Nav.Item>\r\n                    \r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"link-1\" onClick={() => {setTabs(1)}}>배송/교환/반품 안내</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                \r\n                <TabContent tabs={tabs} />\r\n            </div> \r\n            <Footer addBasketModalOn={addBasketModalOn}/>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Detail;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"names":["className","styles","width","rowSpan","colSpan","tabs","onOpenModal","navigate","useNavigate","useEffect","document","body","style","cssText","window","scrollY","top","scrollTo","parseInt","enableScroll","Button","onClick","popularShoes","isLogged","setPopularShoes","setIsLogged","useState","setTabs","isAlert","setIsAlert","itemCount","setItemCount","addBasketModalOn","setAddBasketModalOn","id","useParams","findItem","find","item","dispatch","useSelector","state","basketReducer","useDispatch","watchedArray","database","getDatabase","userId","getAuth","currentUser","uid","Ref","ref","onValue","snapshot","val","unshift","Set","update","history","localStorage","getItem","JSON","parse","setItem","stringify","timer","setTimeout","clearTimeout","MainNavbar","src","title","content","price","type","value","onChange","e","target","console","log","cartArray","cartRef","cartFormat","name","quan","addFound","findIndex","push","cart","payload","Nav","variant","defaultActiveKey","eventKey","Footer","React","as","bsPrefix","size","active","props","prefix","useBootstrapPrefix","useButtonProps","tagName","buttonProps","Component","_jsx","classNames","href","disabled","displayName","defaultProps"],"sourceRoot":""}